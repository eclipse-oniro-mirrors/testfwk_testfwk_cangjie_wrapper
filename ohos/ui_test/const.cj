/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package ohos.ui_test

const OBJ_LOST = 17000004i32
const STRING_BOTTOM = "bottom"
const STRING_LEFT = "left"
const STRING_RIGHT = "right"
const STRING_TOP = "top"
const EMPTY_PARAM = "[]"
const TESTMODE_ENABLE = "persist.ace.testmode.enabled"
const POINTERMATRIX_CREATE = "PointerMatrix.create"
const POINTERMATRIX_SETPOINT = "PointerMatrix.setPoint"
const ON_SEED_REF = "On#seed"
const ON_TEXT = "On.text"
const ON_ID = "On.id"
const ON_TYPE = "On.type"
const ON_DESCRIPTION = "On.description"
const ON_ENABLED = "On.enabled"
const ON_FOCUSED = "On.focused"
const ON_SELECTED = "On.selected"
const ON_CLICKABLE = "On.clickable"
const ON_LONG_CLICKABLE = "On.longClickable"
const ON_SCROLLABLE = "On.scrollable"
const ON_CHECKABLE = "On.checkable"
const ON_CHECKED = "On.checked"
const ON_IS_BEFORE = "On.isBefore"
const ON_IS_AFTER = "On.isAfter"
const ON_WITHIN = "On.within"
const ON_IN_WINDOW = "On.inWindow"
const OBSERVER_ONCE = "UIEventObserver.once"
const TOAST = "[\"toastShow\","
const DIALOG = "[\"dialogShow\","
const COMPONENT_GET_TEXT = "Component.getText"
const COMPONENT_GET_ID = "Component.getId"
const COMPONENT_GET_TYPE = "Component.getType"
const COMPONENT_GET_DESCRIPTION = "Component.getDescription"
const COMPONENT_IS_ENABLED = "Component.isEnabled"
const COMPONENT_IS_FOCUSED = "Component.isFocused"
const COMPONENT_IS_SELECTED = "Component.isSelected"
const COMPONENT_IS_CLICKABLE = "Component.isClickable"
const COMPONENT_IS_LONGCLICKABLE = "Component.isLongClickable"
const COMPONENT_IS_SCROLLABLE = "Component.isScrollable"
const COMPONENT_IS_CHECKABLE = "Component.isCheckable"
const COMPONENT_IS_CHECKED = "Component.isChecked"
const COMPONENT_GET_BOUNDS = "Component.getBounds"
const COMPONENT_GET_BOUNDSCENTER = "Component.getBoundsCenter"
const COMPONENT_CLICK = "Component.click"
const COMPONENT_LONG_CLICK = "Component.longClick"
const COMPONENT_DOUBLE_CLICK = "Component.doubleClick"
const COMPONENT_SCROLL_TOTOP = "Component.scrollToTop"
const COMPONENT_SCROLL_TOBOTTOM = "Component.scrollToBottom"
const COMPONENT_INPUT_TEXT = "Component.inputText"
const COMPONENT_CLEAR_TEXT = "Component.clearText"
const COMPONENT_SCROLL_SEARCH = "Component.scrollSearch"
const COMPONENT_DRAGTO = "Component.dragTo"
const COMPONENT_PINCHOUT = "Component.pinchOut"
const COMPONENT_PINCHIN = "Component.pinchIn"
const UIWINDOW_GETBUNDLENAME = "UiWindow.getBundleName"
const UIWINDOW_GETBOUNDS = "UiWindow.getBounds"
const UIWINDOW_GETTITLE = "UiWindow.getTitle"
const UIWINDOW_GETWINDOWMODE = "UiWindow.getWindowMode"
const UIWINDOW_ISFOCUSED = "UiWindow.isFocused"
const UIWINDOW_ISACTIVE = "UiWindow.isActive"
const UIWINDOW_FOCUS = "UiWindow.focus"
const UIWINDOW_MOVETO = "UiWindow.moveTo"
const UIWINDOW_RESIZE = "UiWindow.resize"
const UIWINDOW_SPLIT = "UiWindow.split"
const UIWINDOW_MAXIMIZE = "UiWindow.maximize"
const UIWINDOW_RESUME = "UiWindow.resume"
const UIWINDOW_MINIMIZE = "UiWindow.minimize"
const UIWINDOW_CLOSE = "UiWindow.close"
const DRIVER_CREATE = "Driver.create"
const DRIVER_DELAYMS = "Driver.delayMs"
const DRIVER_FINDCOMPONENT = "Driver.findComponent"
const DRIVER_FINDWINDOW = "Driver.findWindow"
const DRIVER_FINDCOMPONENTS = "Driver.findComponents"
const DRIVER_WAITFORCOMPONENT = "Driver.waitForComponent"
const DRIVER_SCREENCAP = "Driver.screenCap"
const DRIVER_SCREENCAPTURE = "Driver.screenCapture"
const DRIVER_ASSERTCOMPONENTEXIST = "Driver.assertComponentExist"
const DRIVER_PRESSBACK = "Driver.pressBack"
const DRIVER_TRIGGERKEY = "Driver.triggerKey"
const DRIVER_TRIGGERCOMBINEKEYS = "Driver.triggerCombineKeys"
const DRIVER_CLICK = "Driver.click"
const DRIVER_LONGCLICK = "Driver.longClick"
const DRIVER_DOUBLECLICK = "Driver.doubleClick"
const DRIVER_SWIPE = "Driver.swipe"
const DRIVER_DRAG = "Driver.drag"
const DRIVER_SETDISPLAYROTATION = "Driver.setDisplayRotation"
const DRIVER_GETDISPLAYROTATION = "Driver.getDisplayRotation"
const DRIVER_SETDISPLAYROTATIONENABLED = "Driver.setDisplayRotationEnabled"
const DRIVER_GETDISPLAYSIZE = "Driver.getDisplaySize"
const DRIVER_GETDISPLAYDENSITY = "Driver.getDisplayDensity"
const DRIVER_WAKEUPDISPLAY = "Driver.wakeUpDisplay"
const DRIVER_PRESSHOME = "Driver.pressHome"
const DRIVER_WAITFORIDLE = "Driver.waitForIdle"
const DRIVER_FLING = "Driver.fling"
const DRIVER_INJECTMULTIPOINTERACTION = "Driver.injectMultiPointerAction"
const DRIVER_MOUSECLICK = "Driver.mouseClick"
const DRIVER_MOUSEDOUBLECLICK = "Driver.mouseDoubleClick"
const DRIVER_MOUSELONGCLICK = "Driver.mouseLongClick"
const DRIVER_MOUSEMOVETO = "Driver.mouseMoveTo"
const DRIVER_MOUSEMOVEWITHTRACK = "Driver.mouseMoveWithTrack"
const DRIVER_MOUSEDRAG = "Driver.mouseDrag"
const DRIVER_MOUSESCROLL = "Driver.mouseScroll"
const DRIVER_CREATEUIEVENTOBSERVER = "Driver.createUIEventObserver"
const DRIVER_INPUTTEXT = "Driver.inputText"
